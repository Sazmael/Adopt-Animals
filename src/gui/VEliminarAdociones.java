package gui;

import clases.*;
import java.awt.Image;
import java.util.Iterator;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


public class VEliminarAdociones extends javax.swing.JFrame {
    private ImageIcon imagen;
    private Icon icono;
    
    public VTipoAnimal tipo;
    DefaultTableModel listTipo1 = new DefaultTableModel();
    DefaultTableModel listAdopciones = new DefaultTableModel();
    
    int idAux;
    int indice;
    String descripcion;
    
    public VEliminarAdociones() {
        initComponents();
        this.setTitle("Eliminar Adopciones y Tipos de animales"); //Título de la ventana de la GUI.
        this.setLocationRelativeTo(null); //Centrar la ventana de la GUI.
        this.ajustarImagen(this.label_Imagen1, "src\\com\\images\\persona.png");
        this.ajustarImagen(this.label_Imagen2, "src\\com\\images\\noanimal.png");
        
         listTipo1 = (DefaultTableModel)this.jTablaListaTipo1.getModel();
         listAdopciones = (DefaultTableModel)this.jTablaAdopciones.getModel();
         cargarTipoStack();
         
         //Condicional para habilitar o no el boton borrar tipo si la lista esta vacia o no
        if(tipo.tipoStack.isEmpty()){
            btn_borrarTipo.setEnabled(false);
        }else{
            btn_borrarTipo.setEnabled(true);
        }
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablaListaTipo1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTablaAdopciones = new javax.swing.JTable();
        btn_eliminarAdopcion = new javax.swing.JButton();
        btn_borrarTipo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labelMensajes = new javax.swing.JLabel();
        btn_Cerrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        label_Imagen1 = new javax.swing.JLabel();
        label_Imagen2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTablaListaTipo1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID tipo Animal", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablaListaTipo1.setRowHeight(20);
        jTablaListaTipo1.getTableHeader().setReorderingAllowed(false);
        jTablaListaTipo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaListaTipo1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTablaListaTipo1);

        jTablaAdopciones.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTablaAdopciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Tiene certificación de raza", "Domicilio de la persona", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablaAdopciones.setRowHeight(20);
        jTablaAdopciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTablaAdopciones);
        if (jTablaAdopciones.getColumnModel().getColumnCount() > 0) {
            jTablaAdopciones.getColumnModel().getColumn(0).setResizable(false);
            jTablaAdopciones.getColumnModel().getColumn(0).setPreferredWidth(110);
            jTablaAdopciones.getColumnModel().getColumn(1).setResizable(false);
            jTablaAdopciones.getColumnModel().getColumn(2).setResizable(false);
            jTablaAdopciones.getColumnModel().getColumn(2).setPreferredWidth(1);
        }

        btn_eliminarAdopcion.setBackground(new java.awt.Color(255, 102, 0));
        btn_eliminarAdopcion.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_eliminarAdopcion.setText("Eliminar adopción");
        btn_eliminarAdopcion.setEnabled(false);
        btn_eliminarAdopcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarAdopcionActionPerformed(evt);
            }
        });

        btn_borrarTipo.setBackground(new java.awt.Color(255, 102, 0));
        btn_borrarTipo.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_borrarTipo.setText("Eliminar tipo de animal");
        btn_borrarTipo.setEnabled(false);
        btn_borrarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarTipoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Adopciones registradas:");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Tipo de animales:");

        labelMensajes.setBackground(new java.awt.Color(255, 0, 0));
        labelMensajes.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N

        btn_Cerrar.setBackground(new java.awt.Color(51, 255, 51));
        btn_Cerrar.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_Cerrar.setText("Volver");
        btn_Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CerrarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 204, 102));

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        jLabel3.setText("Elimina las adopciones y los tipos de animales");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        jLabel4.setText("Animales");
        jLabel4.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(469, 469, 469)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(629, 629, 629)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(364, 364, 364)
                    .addComponent(label_Imagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(689, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(label_Imagen1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addGap(8, 8, 8)))
        );

        jLabel11.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jLabel11.setText("#Haga click en algun tipo de animal");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(btn_eliminarAdopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_borrarTipo))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(labelMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(btn_Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(405, 405, 405))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(label_Imagen2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(415, 415, 415))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(label_Imagen2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_borrarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_eliminarAdopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(labelMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaListaTipo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaListaTipo1MouseClicked
        //Pasar un auxiliar el indice de la tabla seleccionada
        indice = jTablaListaTipo1.rowAtPoint(evt.getPoint());

        //Auxiliar de ID animal y descripción segun el indice clickeado
        idAux = Integer.parseInt(listTipo1.getValueAt(indice, 0).toString());
        descripcion = listTipo1.getValueAt(indice, 1).toString();

        refrescarTablaAdopciones();
        mostrarDatosAdopcion();

    }//GEN-LAST:event_jTablaListaTipo1MouseClicked

    private void btn_eliminarAdopcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarAdopcionActionPerformed

        borrarCola();
        refrescarTablaAdopciones();
        mostrarDatosAdopcion();
    }//GEN-LAST:event_btn_eliminarAdopcionActionPerformed

    private void btn_borrarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarTipoActionPerformed
        //Condicional para borrar el ultimo tipo de animal registrado si no tiene adopciones en la cola
        if(tipo.tipoStack.peek().getAdopcionesQueue().isEmpty()){
            tipo.tipoStack.pop();
            labelMensajes.setText("");
        }else{
            labelMensajes.setText("No es posible eliminar, el ultimo tipo de animal contiene adopciones relacionadas!");
        }

        //Condicional para habilitar o no el boton guardar tipo si la lista esta vacia o no
        if(tipo.tipoStack.isEmpty()){
            btn_borrarTipo.setEnabled(false);
        }else{
            btn_borrarTipo.setEnabled(true);
        }

        refrescarTablasTipo();
        cargarTipoStack();

    }//GEN-LAST:event_btn_borrarTipoActionPerformed

    private void btn_CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CerrarActionPerformed
       MenuPrincipal menu = new MenuPrincipal();
       menu.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btn_CerrarActionPerformed

    private void refrescarTablaAdopciones(){
        int fila;
        //Borrar datos de tabla adopcion
        fila = listAdopciones.getRowCount();
        for(int i = fila-1;i >=0; i--){  
         
         listAdopciones.removeRow(i);
        }
        
    }
    
    private void borrarCola(){
        //Iterador para borrar la cola por orden FIFO
        for (Iterator<TipoAnimales> iterator = tipo.tipoStack.iterator(); iterator.hasNext();) {
            TipoAnimales next = iterator.next();
            if(idAux == next.getIdTipoAnimal()){
                
               next.getAdopcionesQueue().remove();
            }
        }                           
     }
    
    public void mostrarDatosAdopcion(){
         //Recorrer el stack en un iterador para mostrarlas por ID animal asignado en su cola
         for (Iterator<TipoAnimales> iterator = tipo.tipoStack.iterator(); iterator.hasNext();) {
             TipoAnimales next = iterator.next();
             
             if(idAux == next.getIdTipoAnimal()){
                 
                    //Condicional para deshabilitar el boton eliminar adopcion si no encuentra datos en la cola
                    if(indice >= 0 && next.getAdopcionesQueue().isEmpty() == false){
                     btn_eliminarAdopcion.setEnabled(true);
                    }else{
                        btn_eliminarAdopcion.setEnabled(false);
                     }
                        
                       //Recorrer la cola de adopciones por ID animal asignado
                       for (Iterator<Adopciones> iterator1 = next.getAdopcionesQueue().iterator(); iterator1.hasNext();) {
                        Adopciones next1 = iterator1.next();
                        
                        String raza; //Variable para asignar si se tiene certificación de raza
                        if(next1.isCertificacionRaza() == true){
                             raza = "Sí";
                            
                        }else{
                            raza = "No";
                        }
                        //Llenar la tabla de adopciones
                        listAdopciones.addRow(new Object[]{
                
                        next1.getDni(),next1.getNombre(), raza, next1.getDomicilio(), next1.getCosto()
                              
                    });                      
                 }
 
             }
               
         }
              
     }
    
    private void cargarTipoStack(){
        
         //Recorrer el stack para llenar las tablas tipoAnimal
         for (Iterator<TipoAnimales> iterator = tipo.tipoStack.iterator(); iterator.hasNext();) {
            TipoAnimales next = iterator.next();
            
            listTipo1.addRow(new Object[]{
                
                
                
                next.getIdTipoAnimal(), next.getDescripcion()

            });
             
        }
     }
    
     public void refrescarTablasTipo(){
        int fila;
        //Borrar datos de tablas tipo
        fila = listTipo1.getRowCount();

        for(int i = fila-1;i >=0; i--){  
         listTipo1.removeRow(i);
         
        } 
    }
     
     private void ajustarImagen(JLabel lbl, String ruta){
        this.imagen = new ImageIcon(ruta);
        this.icono = new ImageIcon(this.imagen.getImage().getScaledInstance(
                lbl.getWidth(), 
                lbl.getHeight(), 
                Image.SCALE_DEFAULT
             )   
      );
      lbl.setIcon(this.icono);
      this.repaint();      
    }
     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VEliminarAdociones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VEliminarAdociones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VEliminarAdociones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VEliminarAdociones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VEliminarAdociones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cerrar;
    public javax.swing.JButton btn_borrarTipo;
    private javax.swing.JButton btn_eliminarAdopcion;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTablaAdopciones;
    private javax.swing.JTable jTablaListaTipo1;
    private javax.swing.JLabel labelMensajes;
    private javax.swing.JLabel label_Imagen1;
    private javax.swing.JLabel label_Imagen2;
    // End of variables declaration//GEN-END:variables
}
